/*
Создать шаблонную функцию, которая принимает итераторы на начало и конец последовательности слов,
и выводящую в консоль список уникальных слов (если слово повторяется больше 1 раза, то вывести его надо один раз).
Продемонстрировать работу функции, передав итераторы различных типов.

Используя ассоциативный контейнер, напишите программу,
которая будет считывать данные введенные пользователем из стандартного потока ввода и разбивать их на предложения.
Далее программа должна вывести пользователю все предложения, отсортировав их по длине.
*/

#include <iostream>
#include <iterator>
#include <vector>
#include <list>
using namespace std;


//Это попытка создать шаблонную функцию
//шибка: missing 'typename' prior to dependent type name 'vector<T>::iterator'
//как исправить не знаю
template <typename T>;
void show_string( vector<T>::iterator &begin, vector<T>::iteranor &end){

}





int main()
{


    cout << "Hello World!" << endl;
    return 0;
}
